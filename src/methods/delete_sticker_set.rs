// WARNING: THIS CODE IS AUTOGENERATED.
// DO NOT EDIT!!!

#![allow(clippy::too_many_arguments)]
use serde::Serialize;

use crate::error::Result;
use crate::Bot;

impl Bot {
    /// Use this method to delete a sticker set that was created by the bot. Returns True on success.
    /// <https://core.telegram.org/bots/api#deletestickerset>
    pub fn delete_sticker_set(&self, name: String) -> DeleteStickerSetBuilder {
        DeleteStickerSetBuilder::new(self, name)
    }
}

#[derive(Serialize)]
pub struct DeleteStickerSetBuilder<'a> {
    #[serde(skip)]
    bot: &'a Bot,
    /// Sticker set name
    pub name: String,
}

impl<'a> DeleteStickerSetBuilder<'a> {
    pub fn new(bot: &'a Bot, name: String) -> Self {
        Self { bot, name }
    }

    pub fn name(mut self, name: String) -> Self {
        self.name = name;
        self
    }

    pub async fn send(self) -> Result<bool> {
        let form = serde_json::to_value(&self)?;
        self.bot.get::<bool>("deleteStickerSet", Some(&form)).await
    }
}
